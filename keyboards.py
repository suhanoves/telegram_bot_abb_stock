from telebot import types
from keyboard_paginator import InlineKeyboardPaginator

# —Å–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –±–æ—Ç–∞
buttons_text = {'–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å': 'üîé –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å',
                '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': '‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏': 'üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
                '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã': 'üìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã',
                '–ú–∞—Å—Å–æ–≥–∞–±–∞—Ä–∏—Ç': 'üì¶ –ú–∞—Å—Å–æ–≥–∞–±–∞—Ä–∏—Ç',
                '–°–∫–ª–∞–¥—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏': 'üöö –°–∫–ª–∞–¥—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏',
                }

# —Å–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–∞ –∫–Ω–æ–ø–∫–∞ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å –∏—Ö –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
buttons = {name: types.KeyboardButton(view) for name, view in buttons_text.items()}


def get_find_keyboard():
    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞
    find_keyboard = types.InlineKeyboardMarkup(row_width=2)
    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
    button1 = types.InlineKeyboardButton(text='–ü–æ –∞—Ä—Ç–∏–∫—É–ª—É', callback_data='manufacturer_code')
    button2 = types.InlineKeyboardButton(text='–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='product_name')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
    find_keyboard.add(button1, button2)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return find_keyboard


def get_help_keyboard():
    # —Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    help_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    help_keyboard.add(buttons['–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'])
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return help_keyboard


def get_info_keyboard():
    # —Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    info_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    info_keyboard.row(buttons['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'], buttons['–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏'])
    info_keyboard.row(buttons['–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã'], buttons['–ú–∞—Å—Å–æ–≥–∞–±–∞—Ä–∏—Ç'])
    info_keyboard.row(buttons['–°–∫–ª–∞–¥—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏'])
    info_keyboard.row(buttons['–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'])
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return info_keyboard


def get_list_choice_keyboard():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞
    inline_keyboard = types.InlineKeyboardMarkup()

    # –ü–æ –æ—á–µ—Ä–µ–¥–∏ –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
    chat_button1 = types.InlineKeyboardButton(
        text='–ö–æ–Ω—Ç–∞–∫—Ç–æ—Ä AF16-30-10-11 —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∫–∞—Ç—É—à–∫–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 24-60B AC / 20-60B DC',
        callback_data='choice')
    chat_button2 = types.InlineKeyboardButton(
        text='–ö–æ–Ω—Ç–∞–∫—Ç–æ—Ä AF16-30-01-11 —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∫–∞—Ç—É—à–∫–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 24-60B AC / 20-60B DC',
        callback_data='choice')

    # –ò –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω
    inline_keyboard.add(chat_button1)
    inline_keyboard.add(chat_button2)

    return inline_keyboard


def get_pagination_keyboard(product_numbers: list, current_page: int, page_count: int):
    # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    paginator = InlineKeyboardPaginator(
        page_count,
        current_page=current_page,
        data_pattern='page {page}')

    # —Å–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    product_buttons = []

    # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ [(text, callback_data),]
    for number in product_numbers:
        product_buttons.append(types.InlineKeyboardButton(text=f'{number}', callback_data=f'product {number}'))

    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    paginator.add_before(*product_buttons)

    return paginator.markup


def remove_reply_keyboard():
    return types.ReplyKeyboardRemove()
